name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  MAKEFLAGS: -j2

jobs:
  rust_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
          components: rustfmt, clippy
    - name: Install Dependences and Configure
      run: |
        sudo apt update && sudo apt install libudev-dev libdbus-1-dev pkg-config libsystemd-dev libwayland-dev libseat-dev xcb libinput-dev libxkbcommon-dev libglvnd-dev
    - name: Build
      run: cargo build --verbose --release
    - name: Test
      run: cargo test --verbose --release
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: build-artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./target/release/corrosionwm
        # The desired behavior if no files are found using the provided path.
    - name: Discord notification
      if: ${{ github.event_name != 'pull_request' }}
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        # result will be:
        #   Successfully built `<commit name>` on `<branch name>`
        # and attach the build artifact
        # TODO: THIS ONLY WORKS ON PUSH, NOT PR
        args: Successfully built commit `${{ github.event.head_commit.message }}` on `${{ github.ref_name }}`, download the build artifact at <${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}>

